[{"path":"https://rinterface.github.io/shiny386/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2020 David Granjon Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://rinterface.github.io/shiny386/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"David Granjon. Author, maintainer.","code":""},{"path":"https://rinterface.github.io/shiny386/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Granjon D (2024). shiny386: Old School 'Bootstrap 4' Template Shiny. R package version 0.0.1.9000, https://rinterface.github.io/shiny386, https://github.com/RinteRface/shiny386.","code":"@Manual{,   title = {shiny386: Old School 'Bootstrap 4' Template for Shiny},   author = {David Granjon},   year = {2024},   note = {R package version 0.0.1.9000, https://rinterface.github.io/shiny386},   url = {https://github.com/RinteRface/shiny386}, }"},{"path":"https://rinterface.github.io/shiny386/index.html","id":"shiny386","dir":"","previous_headings":"","what":"Old School Bootstrap 4 Template for Shiny","title":"Old School Bootstrap 4 Template for Shiny","text":"goal shiny386 provide old school Bootstrap 4 template Shiny. built top Bootstrap 386 HTML template.","code":""},{"path":"https://rinterface.github.io/shiny386/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Old School Bootstrap 4 Template for Shiny","text":"can install released version shiny386 Github :","code":"pak::pak(\"RinteRface/shiny386\")"},{"path":"https://rinterface.github.io/shiny386/index.html","id":"demo","dir":"","previous_headings":"","what":"Demo","title":"Old School Bootstrap 4 Template for Shiny","text":"Toggle code  can play demo app modify code.","code":"library(shiny) library(shiny386) library(bslib) library(dplyr) library(ggplot2) library(ggExtra) library(thematic)  thematic_shiny(font = \"auto\")  penguins_csv <- \"https://raw.githubusercontent.com/jcheng5/simplepenguins.R/main/penguins.csv\"  df <- readr::read_csv(penguins_csv) # Find subset of columns that are suitable for scatter plot df_num <- df |> select(where(is.numeric), -Year)  ui <- page_386(   h1(\"Penguins App\"),   br(),    h3(\"This app is just amazing...\"),    fluidRow(     column(       width = 4,       card_386(         title = \"Aesthetics\",         status = \"warning\",         select_input_386(\"xvar\", \"X variable\", colnames(df_num), selected = \"Bill Length (mm)\"),         select_input_386(\"yvar\", \"Y variable\", colnames(df_num), selected = \"Bill Depth (mm)\"),         checkbox_group_input_386(           \"species\", \"Filter by species\",           choices = unique(df$Species),           selected = unique(df$Species)         )       ),       card_386(         title = \"Other options\",         status = \"warning\",         checkbox_input_386(\"by_species\", \"Show species\", TRUE),         checkbox_input_386(\"show_margins\", \"Show marginal plots\", TRUE),         checkbox_input_386(\"smooth\", \"Add smoother\")       ),       button_386(\"run\", \"Do plot!\", class = \"btn-lg btn-block\")     ),     column(       width = 8,       jumbotron_386(plotOutput(\"scatter\"))     )   ) )  server <- function(input, output, session) {    subsetted <- eventReactive(input$run, {     req(input$species)     df |> filter(Species %in% input$species)   })    output$scatter <- renderPlot(     {       p <- ggplot(subsetted(), aes(.data[[input$xvar]], .data[[input$yvar]])) +         list(           theme(legend.position = \"bottom\"),           if (input$by_species) aes(color = Species),           geom_point(),           if (input$smooth) geom_smooth()         )        if (input$show_margins) {         margin_type <- if (input$by_species) \"density\" else \"histogram\"         p <- ggExtra::ggMarginal(p,           type = margin_type, margins = \"both\",           size = 8, groupColour = input$by_species, groupFill = input$by_species         )       }        p     },     res = 100   ) }  shinyApp(ui, server)"},{"path":"https://rinterface.github.io/shiny386/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Old School Bootstrap 4 Template for Shiny","text":"basic example shows solve common problem:","code":"library(shiny) library(shiny386) ui <- page_386(  card_386(   title = \"My card\",   \"This is my card\",   br(),   card_link_386(href = \"https://www.google.com\", \"More\"),   footer = \"Card footer\"  ) )  server <- function(input, output, session) {} shinyApp(ui, server)"},{"path":"https://rinterface.github.io/shiny386/reference/badge_386.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Bootstrap 386 badge — badge_386","title":"Create a Bootstrap 386 badge — badge_386","text":"Create Bootstrap 386 badge","code":""},{"path":"https://rinterface.github.io/shiny386/reference/badge_386.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Bootstrap 386 badge — badge_386","text":"","code":"badge_386(..., status, rounded = FALSE)"},{"path":"https://rinterface.github.io/shiny386/reference/badge_386.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Bootstrap 386 badge — badge_386","text":"... Text. status Badge status. rounded Rounded style. Default FALSE.","code":""},{"path":"https://rinterface.github.io/shiny386/reference/badge_386.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Bootstrap 386 badge — badge_386","text":"shiny tags","code":""},{"path":"https://rinterface.github.io/shiny386/reference/badge_386.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Bootstrap 386 badge — badge_386","text":"","code":"if (interactive()) {  library(shiny)  library(shiny386)  ui <- page_386(   badge_386(status = \"danger\", \"1\"),   badge_386(status = \"info\", \"2\"),   badge_386(status = \"success\", \"3\", rounded = TRUE)  )   server <- function(input, output, session) {}  shinyApp(ui, server) }"},{"path":"https://rinterface.github.io/shiny386/reference/button_386.html","id":null,"dir":"Reference","previous_headings":"","what":"Bootstrap 386 action button — button_386","title":"Bootstrap 386 action button — button_386","text":"Bootstrap 386 action button","code":""},{"path":"https://rinterface.github.io/shiny386/reference/button_386.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bootstrap 386 action button — button_386","text":"","code":"button_386(inputId, label, status = NULL, icon = NULL, width = NULL, ...)"},{"path":"https://rinterface.github.io/shiny386/reference/button_386.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bootstrap 386 action button — button_386","text":"inputId input slot used access value. label contents button link–usually text label, also use HTML, like image. status Button color. icon optional icon() appear button. width width input, e.g. '400px', '100%'; see validateCssUnit(). ... Named attributes applied button link.","code":""},{"path":"https://rinterface.github.io/shiny386/reference/button_386.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bootstrap 386 action button — button_386","text":"shiny tag.","code":""},{"path":"https://rinterface.github.io/shiny386/reference/button_386.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bootstrap 386 action button — button_386","text":"","code":"if (interactive()) {  library(shiny)  library(shiny386)   ui <- page_386(   button_386(    \"btn\",    HTML(paste(\"Value\", textOutput(\"val\"), sep = \":\")),    icon = icon(\"thumbs-up\"),    class = \"btn-lg\"   )  )   server <- function(input, output) {    output$val <- renderText(input$btn)  }   shinyApp(ui, server) }"},{"path":"https://rinterface.github.io/shiny386/reference/card.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Bootstrap 386 card — card_386","title":"Create a Bootstrap 386 card — card_386","text":"Create Bootstrap 386 card Create Bootstrap 4 card title element Create Bootstrap 386 card subtitle element Create Bootstrap 386 card link element","code":""},{"path":"https://rinterface.github.io/shiny386/reference/card.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Bootstrap 386 card — card_386","text":"","code":"card_386(..., title = NULL, status = NULL, footer = NULL)  card_title_386(title)  card_subtitle_386(subtitle)  card_link_386(href, label)"},{"path":"https://rinterface.github.io/shiny386/reference/card.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Bootstrap 386 card — card_386","text":"... Card content. title Title text. status Card background status. footer Card footer. subtitle Card subtitle. href Target url. label Link text.","code":""},{"path":"https://rinterface.github.io/shiny386/reference/card.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Bootstrap 386 card — card_386","text":"shiny tag shiny tag. shiny tag. shiny tag.","code":""},{"path":"https://rinterface.github.io/shiny386/reference/card.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Bootstrap 386 card — card_386","text":"","code":"if (interactive()) {  library(shiny)  library(shiny386)  ui <- page_386(   card_386(    title = \"My card\",    \"This is my card\",    br(),    card_link_386(href = \"https://www.google.com\", \"More\"),    footer = \"Card footer\"   )  )   server <- function(input, output, session) {}  shinyApp(ui, server) }"},{"path":"https://rinterface.github.io/shiny386/reference/checkbox_group_input_386.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Bootstrap 386 checkbox group input — checkbox_group_input_386","title":"Create a Bootstrap 386 checkbox group input — checkbox_group_input_386","text":"Create Bootstrap 386 checkbox group input","code":""},{"path":"https://rinterface.github.io/shiny386/reference/checkbox_group_input_386.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Bootstrap 386 checkbox group input — checkbox_group_input_386","text":"","code":"checkbox_group_input_386(   inputId,   label,   choices = NULL,   selected = NULL,   width = NULL,   choiceNames = NULL,   choiceValues = NULL )"},{"path":"https://rinterface.github.io/shiny386/reference/checkbox_group_input_386.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Bootstrap 386 checkbox group input — checkbox_group_input_386","text":"inputId input slot used access value. label Display label control, NULL label. choices List values show checkboxes . elements list named name rather value displayed user. argument provided, choiceNames choiceValues must provided, vice-versa. values strings; types (logicals numbers) coerced strings. selected values initially selected, . width width input, e.g. '400px', '100%'; see validateCssUnit(). choiceNames, choiceValues List names values, respectively, displayed user app correspond choice (reason, choiceNames choiceValues must length). either arguments provided, must provided choices must provided. advantage using named list choices choiceNames allows type UI object passed (tag objects, icons, HTML code, ...), instead just simple text. See Examples.","code":""},{"path":"https://rinterface.github.io/shiny386/reference/checkbox_group_input_386.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Bootstrap 386 checkbox group input — checkbox_group_input_386","text":"","code":"if (interactive()) {  library(shiny)  library(shiny386)   ui <- page_386(   checkbox_group_input_386(\"variable\", \"Variables to show:\",    c(\"Cylinders\" = \"cyl\",      \"Transmission\" = \"am\",      \"Gears\" = \"gear\")),   tableOutput(\"data\")  )   server <- function(input, output, session) {    output$data <- renderTable({     mtcars[, c(\"mpg\", input$variable), drop = FALSE]    }, rownames = TRUE)  }  shinyApp(ui, server)  }"},{"path":"https://rinterface.github.io/shiny386/reference/checkbox_input_386.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Bootstrap 386 checkbox — checkbox_input_386","title":"Create a Bootstrap 386 checkbox — checkbox_input_386","text":"Create Bootstrap 386 checkbox","code":""},{"path":"https://rinterface.github.io/shiny386/reference/checkbox_input_386.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Bootstrap 386 checkbox — checkbox_input_386","text":"","code":"checkbox_input_386(inputId, label, value = FALSE, width = NULL)"},{"path":"https://rinterface.github.io/shiny386/reference/checkbox_input_386.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Bootstrap 386 checkbox — checkbox_input_386","text":"inputId input slot used access value. label Display label control, NULL label. value Initial value (TRUE FALSE). width width input, e.g. '400px', '100%'; see validateCssUnit().","code":""},{"path":"https://rinterface.github.io/shiny386/reference/checkbox_input_386.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Bootstrap 386 checkbox — checkbox_input_386","text":"","code":"if (interactive()) {  library(shiny)  library(shiny386)   ui <- page_386(   checkbox_input_386(\"check\", \"Check me\", TRUE),   verbatimTextOutput(\"val\")  )   server <- function(input, output, session) {    output$val <- renderPrint(input$check)  }  shinyApp(ui, server) }"},{"path":"https://rinterface.github.io/shiny386/reference/create_app_link.html","id":null,"dir":"Reference","previous_headings":"","what":"Create shinylive iframe — create_app_link","title":"Create shinylive iframe — create_app_link","text":"Useful pkgdown website","code":""},{"path":"https://rinterface.github.io/shiny386/reference/create_app_link.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create shinylive iframe — create_app_link","text":"","code":"create_app_link(url, mode = c(\"app\", \"editor\"), header = TRUE)"},{"path":"https://rinterface.github.io/shiny386/reference/create_app_link.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create shinylive iframe — create_app_link","text":"url app url. shinylive link. mode display shinylive app. Default app mode. header Whether display shinylive header. Default TRUE.","code":""},{"path":"https://rinterface.github.io/shiny386/reference/create_checkbox_tag.html","id":null,"dir":"Reference","previous_headings":"","what":"Create checkbox/switch input based on the selected type — create_checkbox_tag","title":"Create checkbox/switch input based on the selected type — create_checkbox_tag","text":"Used internally toggle_input_386 checkbox_input_386","code":""},{"path":"https://rinterface.github.io/shiny386/reference/create_checkbox_tag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create checkbox/switch input based on the selected type — create_checkbox_tag","text":"","code":"create_checkbox_tag(   inputId,   label,   value = FALSE,   width = NULL,   type = c(\"switch\", \"checkbox\") )"},{"path":"https://rinterface.github.io/shiny386/reference/create_checkbox_tag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create checkbox/switch input based on the selected type — create_checkbox_tag","text":"inputId input slot used access value. label Display label control, NULL label. value Initial value (TRUE FALSE). width width input, e.g. '400px', '100%'; see validateCssUnit(). type Input type. able distinguish switch checkbox, slightly different design.","code":""},{"path":"https://rinterface.github.io/shiny386/reference/create_checkbox_tag.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create checkbox/switch input based on the selected type — create_checkbox_tag","text":"input tag.","code":""},{"path":"https://rinterface.github.io/shiny386/reference/dropdown.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Bootstrap 386 dropdown container for buttons/links — dropdown_386","title":"Create a Bootstrap 386 dropdown container for buttons/links — dropdown_386","text":"Can simple link action button","code":""},{"path":"https://rinterface.github.io/shiny386/reference/dropdown.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Bootstrap 386 dropdown container for buttons/links — dropdown_386","text":"","code":"dropdown_386(..., inputId = NULL, label, status = NULL, open = FALSE)  open_dropdown_386(inputId, session = shiny::getDefaultReactiveDomain())  dropdown_item_386(inputId = NULL, href = NULL, label)"},{"path":"https://rinterface.github.io/shiny386/reference/dropdown.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Bootstrap 386 dropdown container for buttons/links — dropdown_386","text":"... Slot dropdown_item_386. inputId action button. label Button label. status Button status. open Whether open dropdown start. Default FALSE. session Shiny session object. href simple link.","code":""},{"path":"https://rinterface.github.io/shiny386/reference/dropdown.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Bootstrap 386 dropdown container for buttons/links — dropdown_386","text":"shiny tag message R JavaScript websocket. shiny tag","code":""},{"path":"https://rinterface.github.io/shiny386/reference/dropdown.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Bootstrap 386 dropdown container for buttons/links — dropdown_386","text":"","code":"if (interactive()) {  library(shiny)  library(shiny386)   ui <- page_386(    dropdown_386(      inputId = \"plop\",      label = \"Menu\",      status = \"danger\",      open = FALSE,      dropdown_item_386(inputId = \"btn1\", label = \"button 1\"),      dropdown_item_386(href = \"https://www.google.com/\", label = \"More\")    )  )   server <- function(input, output, session) {    observe(print(input$btn1))  }  shinyApp(ui, server) } if (interactive()) {  library(shiny)  library(shiny386)   ui <- page_386(   fluidRow(     button_386(\"open\", \"Open dropdown\", class = \"btn-lg\"),     dropdown_386(       inputId = \"plop\",       label = \"Menu\",       dropdown_item_386(inputId = \"btn1\", label = \"button 1\"),       dropdown_item_386(href = \"https://www.google.com/\", label = \"More\")     )   )  )   server <- function(input, output, session) {    observe(print(input$plop))    observeEvent(input$open, {      open_dropdown_386(\"plop\")    })    observeEvent(req(input$plop), {      showNotification(\"Dropdown opened!\")    })  }  shinyApp(ui, server) }"},{"path":"https://rinterface.github.io/shiny386/reference/jumbotron_386.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Bootstrap 386 Jumbotron — jumbotron_386","title":"Create a Bootstrap 386 Jumbotron — jumbotron_386","text":"Create Bootstrap 386 Jumbotron","code":""},{"path":"https://rinterface.github.io/shiny386/reference/jumbotron_386.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Bootstrap 386 Jumbotron — jumbotron_386","text":"","code":"jumbotron_386(..., title = NULL)"},{"path":"https://rinterface.github.io/shiny386/reference/jumbotron_386.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Bootstrap 386 Jumbotron — jumbotron_386","text":"... element. title Jumbotron title.","code":""},{"path":"https://rinterface.github.io/shiny386/reference/jumbotron_386.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Bootstrap 386 Jumbotron — jumbotron_386","text":"shiny tag","code":""},{"path":"https://rinterface.github.io/shiny386/reference/jumbotron_386.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Bootstrap 386 Jumbotron — jumbotron_386","text":"","code":"if (interactive()) {  library(shiny)  library(shiny386)   ui <- page_386(   jumbotron_386(    title = \"Jumbotron 386\",    p(\"Hello World\"),    button_386(\"btn\", \"More\", class = \"btn-lg btn-block\")   )  )   server <- function(input, output, session) {}   shinyApp(ui, server) }"},{"path":"https://rinterface.github.io/shiny386/reference/list_group_386.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Bootstrap 386 list group container — list_group_386","title":"Create a Bootstrap 386 list group container — list_group_386","text":"Create Bootstrap 386 list group container","code":""},{"path":"https://rinterface.github.io/shiny386/reference/list_group_386.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Bootstrap 386 list group container — list_group_386","text":"","code":"list_group_386(..., width = 4)"},{"path":"https://rinterface.github.io/shiny386/reference/list_group_386.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Bootstrap 386 list group container — list_group_386","text":"... Slot list_group_item_386. width List group width. 4 default. 1 12.","code":""},{"path":"https://rinterface.github.io/shiny386/reference/list_group_386.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create a Bootstrap 386 list group container — list_group_386","text":"David Granjon, dgranjon@ymail.com","code":""},{"path":"https://rinterface.github.io/shiny386/reference/list_group_386.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Bootstrap 386 list group container — list_group_386","text":"","code":"if(interactive()){  library(shiny)  library(shiny386)   shinyApp(    ui = page_386(       fluidRow(        list_group_386(        list_group_item_386(         type = \"basic\",         \"Cras justo odio\"        ),        list_group_item_386(         type = \"basic\",         \"Dapibus ac facilisis in\"        ),        list_group_item_386(         type = \"basic\",         \"Morbi leo risus\"        )       ),       list_group_386(        list_group_item_386(         \"Cras justo odio\",         active = TRUE,         disabled = FALSE,         type = \"action\",         src = \"http://www.google.fr\"        ),        list_group_item_386(         active = FALSE,         disabled = FALSE,         type = \"action\",         \"Dapibus ac facilisis in\",         src = \"http://www.google.fr\"        ),        list_group_item_386(         \"Morbi leo risus\",         active = FALSE,         disabled = TRUE,         type = \"action\",         src = \"http://www.google.fr\"        )       ),       list_group_386(        list_group_item_386(         \"Donec id elit non mi porta gravida at eget metus.         Maecenas sed diam eget risus varius blandit.\",         active = TRUE,         disabled = FALSE,         type = \"heading\",         title = \"List group item heading\",         subtitle = \"3 days ago\",         footer = \"Donec id elit non mi porta.\"        ),        list_group_item_386(         \"Donec id elit non mi porta gravida at eget metus.         Maecenas sed diam eget risus varius blandit.\",         active = FALSE,         disabled = FALSE,         type = \"heading\",         title = \"List group item heading\",         subtitle = \"3 days ago\",         footer = \"Donec id elit non mi porta.\"        )       )      )    ),    server = function(input, output) {}  ) }"},{"path":"https://rinterface.github.io/shiny386/reference/list_group_item_386.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Bootstrap 386 list group item — list_group_item_386","title":"Create a Bootstrap 386 list group item — list_group_item_386","text":"Create Bootstrap 386 list group item","code":""},{"path":"https://rinterface.github.io/shiny386/reference/list_group_item_386.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Bootstrap 386 list group item — list_group_item_386","text":"","code":"list_group_item_386(   ...,   active = FALSE,   disabled = FALSE,   type = c(\"basic\", \"action\", \"heading\"),   src = \"#\",   title = NULL,   subtitle = NULL,   footer = NULL )"},{"path":"https://rinterface.github.io/shiny386/reference/list_group_item_386.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Bootstrap 386 list group item — list_group_item_386","text":"... Item content. active Whether item active . FALSE default. type \"action\" \"heading\". disabled Whether item disabled . FALSE default. type \"action\" \"heading\". type Item type. Choose \"basic\", \"action\" \"heading\". src Item external link. title Item title (type \"heading\"). subtitle Item subtitle (type \"heading\"). footer Item footer content (type \"heading\").","code":""},{"path":"https://rinterface.github.io/shiny386/reference/list_group_item_386.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create a Bootstrap 386 list group item — list_group_item_386","text":"David Granjon, dgranjon@ymail.com","code":""},{"path":"https://rinterface.github.io/shiny386/reference/modal.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Bootstrap 386 modal — modal_386","title":"Create a Bootstrap 386 modal — modal_386","text":"Create Bootstrap 386 modal Show Bootstrap 386 modal Hide Bootstrap 386 modal","code":""},{"path":"https://rinterface.github.io/shiny386/reference/modal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Bootstrap 386 modal — modal_386","text":"","code":"modal_386(   ...,   title = NULL,   footer = modalButton(\"Dismiss\"),   size = c(\"m\", \"s\", \"l\", \"xl\"),   easyClose = FALSE,   fade = TRUE )  show_modal_386(ui, session = getDefaultReactiveDomain())  remove_modal_386(session = getDefaultReactiveDomain())"},{"path":"https://rinterface.github.io/shiny386/reference/modal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Bootstrap 386 modal — modal_386","text":"... UI elements body modal dialog box. title optional title dialog. footer UI footer. Use NULL footer. size One \"s\" small, \"m\" (default) medium, \"l\" large, \"xl\" extra large. Note \"xl\" works Bootstrap 4 (opt-Bootstrap 4+, pass bslib::bs_theme() theme argument page container like fluidPage()). easyClose TRUE, modal dialog can dismissed clicking outside dialog box, pressing Escape key. FALSE (default), modal dialog dismissed ways; instead must dismissed clicking modalButton(), call removeModal() server. fade FALSE, modal dialog fade-animation (simply appear rather fade view). ui UI content show modal. session session object passed function given shinyServer.","code":""},{"path":"https://rinterface.github.io/shiny386/reference/modal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Bootstrap 386 modal — modal_386","text":"","code":"if (interactive()) {  library(shiny)  library(shiny386)   shinyApp(   ui = page_386(     button_386(\"show\", \"Show modal dialog\"),     verbatimTextOutput(\"dataInfo\")   ),    server = function(input, output) {     # reactiveValues object for storing current data set.     vals <- reactiveValues(data = NULL)     # Return the UI for a modal dialog with data selection input. If 'failed' is    # TRUE, then display a message that the previous value was invalid.    dataModal <- function(failed = FALSE) {      modal_386(        textInput(\"dataset\", \"Choose data set\",                  placeholder = 'Try \"mtcars\" or \"abc\"'        ),        span('(Try the name of a valid data object like \"mtcars\", ',             'then a name of a non-existent object like \"abc\")'),        if (failed)          div(tags$b(\"Invalid name of data object\", style = \"color: red;\")),         footer = tagList(          modalButton(\"Cancel\"),          button_386(\"ok\", \"OK\")        )      )    }     # Show modal when button is clicked.    observeEvent(input$show, {      show_modal_386(dataModal())    })     # When OK button is pressed, attempt to load the data set. If successful,    # remove the modal. If not show another modal, but this time with a failure    # message.    observeEvent(input$ok, {      # Check that data object exists and is data frame.      if (!is.null(input$dataset) && nzchar(input$dataset) &&          exists(input$dataset) && is.data.frame(get(input$dataset))) {        vals$data <- get(input$dataset)        remove_modal_386()      } else {        show_modal_386(dataModal(failed = TRUE))      }    })     # Display information about selected data    output$dataInfo <- renderPrint({      if (is.null(vals$data))        \"No data selected\"      else        summary(vals$data)    })   }  ) }"},{"path":"https://rinterface.github.io/shiny386/reference/navbar.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Bootstrap 386 navbar page — navbar_page_386","title":"Create a Bootstrap 386 navbar page — navbar_page_386","text":"Create Bootstrap 386 navbar page Create Bootstrap 386 navbar menu Update Bootstrap 386 navbar client","code":""},{"path":"https://rinterface.github.io/shiny386/reference/navbar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Bootstrap 386 navbar page — navbar_page_386","text":"","code":"navbar_page_386(   title,   ...,   id = NULL,   selected = NULL,   position = c(\"static-top\", \"fixed-top\", \"fixed-bottom\"),   header = NULL,   footer = NULL,   inverse = FALSE,   windowTitle = title )  navbar_menu_386(title, ..., menuName = title, icon = NULL)  update_navbar_page_386(   session = getDefaultReactiveDomain(),   inputId,   selected = NULL )"},{"path":"https://rinterface.github.io/shiny386/reference/navbar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Bootstrap 386 navbar page — navbar_page_386","text":"title title display navbar ... tabPanel() elements include page. navbarMenu function also accepts strings, used menu section headers. string set dashes like \"----\" horizontal separator displayed menu. id provided, can use input$id server logic determine current tabs active. value correspond value argument passed tabPanel(). selected value (, none supplied, title) tab selected default. NULL, first tab selected. position Determines whether navbar displayed top page normal scrolling behavior (\"static-top\"), pinned top (\"fixed-top\"), pinned bottom (\"fixed-bottom\"). Note using \"fixed-top\" \"fixed-bottom\" cause navbar overlay body content, unless add padding, e.g.: tags$style(type=\"text/css\", \"body   {padding-top: 70px;}\") header Tag list tags display common header tabPanels. footer Tag list tags display common footer tabPanels inverse TRUE use dark background light text navigation bar windowTitle browser window title (character string). default value, NA, means use character strings appear title (none found, host URL page displayed default). menuName name identifies navbarMenu. needed want insert/remove show/hide entire navbarMenu. icon Optional icon appear navbarMenu tab. session session object passed function given shinyServer. Default getDefaultReactiveDomain(). inputId id tabsetPanel, navlistPanel, navbarPage object.","code":""},{"path":"https://rinterface.github.io/shiny386/reference/navbar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Bootstrap 386 navbar page — navbar_page_386","text":"shiny tag","code":""},{"path":"https://rinterface.github.io/shiny386/reference/navbar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Bootstrap 386 navbar page — navbar_page_386","text":"","code":"if (interactive()) {  library(shiny)  library(shiny386)   ui <- navbar_page_386(   \"App Title\",   id = \"tabset\",   tab_panel_386(     \"Tab 1\",     radio_input_386(       \"dist\", \"Distribution type:\",       c(\"Normal\" = \"norm\",         \"Uniform\" = \"unif\",         \"Log-normal\" = \"lnorm\",         \"Exponential\" = \"exp\")     ),     plotOutput(\"distPlot\")   ),   tab_panel_386(     \"Tab 2\",     select_input_386(       \"variable\", \"Variable:\",       c(\"Cylinders\" = \"cyl\",         \"Transmission\" = \"am\",         \"Gears\" = \"gear\")     ),     tableOutput(\"data\")   ),   navbar_menu_386(    \"More\",    tab_panel_386(\"Summary\", \"Extra content 1\"),    \"----\",    \"Section header\",    tab_panel_386(\"Table\", \"Extra content 2\")   )  )   server <- function(input, output, session) {    output$distPlot <- renderPlot({      dist <- switch(input$dist,                     norm = rnorm,                     unif = runif,                     lnorm = rlnorm,                     exp = rexp,                     rnorm)       hist(dist(500))    })     output$data <- renderTable({      mtcars[, c(\"mpg\", input$variable), drop = FALSE]    }, rownames = TRUE)     observe(print(input$tabset))   }  shinyApp(ui, server) } if (interactive()) {  library(shiny)  library(shiny386)   ui <- navbar_page_386(   \"App Title\",   id = \"tabset\",   selected = \"Tab 2\",   header = radio_input_386(\"controller\", \"Update tab\", 1:4),   tabPanel(     \"Tab 1\",     \"Content 1\"   ),   tabPanel(     \"Tab 2\",     \"Content 2\"   ),   navbar_menu_386(     \"More\",     tab_panel_386(\"Tab 3\", \"Extra content 1\"),     \"----\",     \"Section header\",     tab_panel_386(\"Tab 4\", \"Extra content 2\")   )  )   server <- function(input, output, session) {    observeEvent(input$controller, {      update_navbar_page_386(session, \"tabset\",                             selected = paste(\"Tab\", input$controller)      )    })  }  shinyApp(ui, server)  }"},{"path":"https://rinterface.github.io/shiny386/reference/page_386.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Bootstrap 386 page skeleton — page_386","title":"Create Bootstrap 386 page skeleton — page_386","text":"Create Bootstrap 386 page skeleton","code":""},{"path":"https://rinterface.github.io/shiny386/reference/page_386.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Bootstrap 386 page skeleton — page_386","text":"","code":"page_386(..., title = NULL)"},{"path":"https://rinterface.github.io/shiny386/reference/page_386.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Bootstrap 386 page skeleton — page_386","text":"... Slot shiny386 layout elements. title browser window title (defaults host URL page). Can also set side effect titlePanel() function.","code":""},{"path":"https://rinterface.github.io/shiny386/reference/page_386.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Bootstrap 386 page skeleton — page_386","text":"list tags","code":""},{"path":"https://rinterface.github.io/shiny386/reference/progress_386.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Bootstrap 386 progress bar — progress_386","title":"Create a Bootstrap 386 progress bar — progress_386","text":"progress bar may updated server side. See update_progress_386.","code":""},{"path":"https://rinterface.github.io/shiny386/reference/progress_386.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Bootstrap 386 progress bar — progress_386","text":"","code":"progress_386(id = NULL, value, status = NULL)"},{"path":"https://rinterface.github.io/shiny386/reference/progress_386.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Bootstrap 386 progress bar — progress_386","text":"id Progress unique id. value Progress value. Numeric 0 100. status Progress status.","code":""},{"path":"https://rinterface.github.io/shiny386/reference/progress_386.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Bootstrap 386 progress bar — progress_386","text":"progress bar tag.","code":""},{"path":[]},{"path":"https://rinterface.github.io/shiny386/reference/radio_input_386.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Bootstrap 386 radio buttons — radio_input_386","title":"Create a Bootstrap 386 radio buttons — radio_input_386","text":"Create Bootstrap 386 radio buttons","code":""},{"path":"https://rinterface.github.io/shiny386/reference/radio_input_386.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Bootstrap 386 radio buttons — radio_input_386","text":"","code":"radio_input_386(   inputId,   label,   choices = NULL,   selected = NULL,   width = NULL,   choiceNames = NULL,   choiceValues = NULL )"},{"path":"https://rinterface.github.io/shiny386/reference/radio_input_386.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Bootstrap 386 radio buttons — radio_input_386","text":"inputId input slot used access value. label Display label control, NULL label. choices List values select (elements list named name rather value displayed user). argument provided, choiceNames choiceValues must provided, vice-versa. values strings; types (logicals numbers) coerced strings. selected initially selected value. specified, defaults first item choices. start items selected, use character(0). width width input, e.g. '400px', '100%'; see validateCssUnit(). choiceNames, choiceValues List names values, respectively, displayed user app correspond choice (reason, choiceNames choiceValues must length). either arguments provided, must provided choices must provided. advantage using named list choices choiceNames allows type UI object passed (tag objects, icons, HTML code, ...), instead just simple text. See Examples.","code":""},{"path":"https://rinterface.github.io/shiny386/reference/radio_input_386.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Bootstrap 386 radio buttons — radio_input_386","text":"","code":"if (interactive()) {  library(shiny)  library(shiny386)   ui <- page_386(   radio_input_386(\"dist\", \"Distribution type:\",                   c(\"Normal\" = \"norm\",                     \"Uniform\" = \"unif\",                     \"Log-normal\" = \"lnorm\",                     \"Exponential\" = \"exp\")),   plotOutput(\"distPlot\")  )   server <- function(input, output, session) {    output$distPlot <- renderPlot({      dist <- switch(input$dist,                     norm = rnorm,                     unif = runif,                     lnorm = rlnorm,                     exp = rexp,                     rnorm)       hist(dist(500))    })  }  shinyApp(ui, server)  }"},{"path":"https://rinterface.github.io/shiny386/reference/select_input_386.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Bootstrap 386 select input — select_input_386","title":"Create a Bootstrap 386 select input — select_input_386","text":"Create Bootstrap 386 select input","code":""},{"path":"https://rinterface.github.io/shiny386/reference/select_input_386.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Bootstrap 386 select input — select_input_386","text":"","code":"select_input_386(   inputId,   label,   choices,   selected = NULL,   multiple = FALSE,   selectize = FALSE,   width = NULL,   size = NULL )"},{"path":"https://rinterface.github.io/shiny386/reference/select_input_386.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Bootstrap 386 select input — select_input_386","text":"inputId input slot used access value. label Display label control, NULL label. choices List values select . elements list named, name — rather value — displayed user. also possible group related inputs providing named list whose elements (either named unnamed) lists, vectors, factors. case, outermost names used group labels (leveraging <optgroup> HTML tag) elements respective sublist. See example section small demo feature. selected initially selected value (multiple values multiple = TRUE). specified defaults first value single-select lists values multiple select lists. multiple selection multiple items allowed? selectize Whether use selectize.js . width width input, e.g. '400px', '100%'; see validateCssUnit(). size Number items show selection box; larger number result taller box. compatible selectize=TRUE. Normally, multiple=FALSE, select input drop-list, size set, box instead.","code":""},{"path":"https://rinterface.github.io/shiny386/reference/select_input_386.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create a Bootstrap 386 select input — select_input_386","text":"Incompatible selectize. Set FALSE default correct CSS rendering.","code":""},{"path":"https://rinterface.github.io/shiny386/reference/select_input_386.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Bootstrap 386 select input — select_input_386","text":"","code":"if (interactive()) {  library(shiny)  library(shiny386)   ui <- page_386(   select_input_386(\"variable\", \"Variable:\",    c(\"Cylinders\" = \"cyl\",      \"Transmission\" = \"am\",      \"Gears\" = \"gear\")),    tableOutput(\"data\")  )   server <- function(input, output, session) {   output$data <- renderTable({    mtcars[, c(\"mpg\", input$variable), drop = FALSE]   }, rownames = TRUE)  }  shinyApp(ui, server)  }"},{"path":"https://rinterface.github.io/shiny386/reference/shiny386.html","id":null,"dir":"Reference","previous_headings":"","what":"shiny386 — shiny386","title":"shiny386 — shiny386","text":"Old school Bootstrap 4 template Shiny","code":""},{"path":[]},{"path":"https://rinterface.github.io/shiny386/reference/shiny386.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"shiny386 — shiny386","text":"Maintainer: David Granjon dgranjon@ymail.com","code":""},{"path":"https://rinterface.github.io/shiny386/reference/show_toast_386.html","id":null,"dir":"Reference","previous_headings":"","what":"Show a Bootstrap 386 toast on the client — show_toast_386","title":"Show a Bootstrap 386 toast on the client — show_toast_386","text":"Show Bootstrap 386 toast client","code":""},{"path":"https://rinterface.github.io/shiny386/reference/show_toast_386.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show a Bootstrap 386 toast on the client — show_toast_386","text":"","code":"show_toast_386(id, options = NULL, session = getDefaultReactiveDomain())"},{"path":"https://rinterface.github.io/shiny386/reference/show_toast_386.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show a Bootstrap 386 toast on the client — show_toast_386","text":"id Toast id. options Toast options: see https://getbootstrap.com/docs/4.3/components/toasts/. session Shiny session","code":""},{"path":"https://rinterface.github.io/shiny386/reference/show_toast_386.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show a Bootstrap 386 toast on the client — show_toast_386","text":"","code":"if (interactive()) {  library(shiny)  library(shiny386)   ui <- page_386(   toast_386(     id = \"toast\",     title = \"Hello\",     subtitle = \"now\",     \"Toast body\",     img = \"https://preview-dev.tabler.io/static/logo.svg\"   ),   button_386(\"launch\", \"Go!\", class = \"btn-lg\")  )   server <- function(input, output, session) {    observe(print(input$toast))    observeEvent(input$launch, {      removeNotification(\"notif\")      show_toast_386(        \"toast\",        options = list(          animation = FALSE,          delay = 3000        )      )    })     observeEvent(input$toast, {      showNotification(        id = \"notif\",        \"Toast was closed\",        type = \"warning\",        duration = 1,       )    })  }   shinyApp(ui, server) }"},{"path":"https://rinterface.github.io/shiny386/reference/tab_panel_386.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Bootstrap 386 tab panel — tab_panel_386","title":"Create a Bootstrap 386 tab panel — tab_panel_386","text":"Create Bootstrap 386 tab panel","code":""},{"path":"https://rinterface.github.io/shiny386/reference/tab_panel_386.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Bootstrap 386 tab panel — tab_panel_386","text":"","code":"tab_panel_386(title, ..., value = title, icon = NULL)"},{"path":"https://rinterface.github.io/shiny386/reference/tab_panel_386.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Bootstrap 386 tab panel — tab_panel_386","text":"title Display title tab ... UI elements include within tab value value sent tabsetPanel reports tab selected. omitted tabsetPanel id, title used. icon Optional icon appear tab. attribute valid using tabPanel within navbarPage().","code":""},{"path":"https://rinterface.github.io/shiny386/reference/tabset_panel_386.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Bootstrap 386 tabset panel — tabset_panel_386","title":"Create a Bootstrap 386 tabset panel — tabset_panel_386","text":"Create Bootstrap 386 tabset panel","code":""},{"path":"https://rinterface.github.io/shiny386/reference/tabset_panel_386.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Bootstrap 386 tabset panel — tabset_panel_386","text":"","code":"tabset_panel_386(   ...,   id = NULL,   selected = NULL,   type = c(\"tabs\", \"pills\"),   position = NULL )"},{"path":"https://rinterface.github.io/shiny386/reference/tabset_panel_386.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Bootstrap 386 tabset panel — tabset_panel_386","text":"... tabPanel() elements include tabset id provided, can use input$id server logic determine current tabs active. value correspond value argument passed tabPanel(). selected value (, none supplied, title) tab selected default. NULL, first tab selected. type \"tabs\" Standard tab look \"pills\" Selected tabs use background fill color \"hidden\" Hides selectable tabs. Use type = \"hidden\" conjunction tabPanelBody() updateTabsetPanel() control active tab via input controls. (See example ) position Tabs position (left right).","code":""},{"path":"https://rinterface.github.io/shiny386/reference/tabset_panel_386.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Bootstrap 386 tabset panel — tabset_panel_386","text":"","code":"if (interactive()) {  library(shiny)  library(shiny386)   ui <- page_386(   tabset_panel_386(     id = \"tabset\",     selected = \"Tab 2\",     tabPanel(\"Tab 1\", \"Content 1\"),     tabPanel(\"Tab 2\", \"Content 2\")   )  )   server <- function(input, output, session) {    observe(print(input$tabset))  }  shinyApp(ui, server)  }"},{"path":"https://rinterface.github.io/shiny386/reference/text_area_input_386.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Bootstrap 386 text area input — text_area_input_386","title":"Create a Bootstrap 386 text area input — text_area_input_386","text":"Create Bootstrap 386 text area input","code":""},{"path":"https://rinterface.github.io/shiny386/reference/text_area_input_386.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Bootstrap 386 text area input — text_area_input_386","text":"","code":"text_area_input_386(   inputId,   label,   value = \"\",   width = NULL,   height = NULL,   cols = NULL,   rows = NULL,   placeholder = NULL,   resize = NULL )"},{"path":"https://rinterface.github.io/shiny386/reference/text_area_input_386.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Bootstrap 386 text area input — text_area_input_386","text":"inputId input slot used access value. label Display label control, NULL label. value Initial value. width width input, e.g. '400px', '100%'; see validateCssUnit(). height height input, e.g. '400px', '100%'; see validateCssUnit(). cols Value visible character columns input, e.g. 80. argument take effect CSS width rule defined element; rule come width argument function containing page layout fluidPage(). rows value visible character rows input, e.g. 6. height argument specified, height take precedence browser's rendering. placeholder character string giving user hint can entered control. Internet Explorer 8 9 support option. resize directions textarea box can resized. Can one \"\", \"none\", \"vertical\", \"horizontal\". default, NULL, use client browser's default setting resizing textareas.","code":""},{"path":"https://rinterface.github.io/shiny386/reference/text_area_input_386.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Bootstrap 386 text area input — text_area_input_386","text":"","code":"if (interactive()) {  library(shiny)  library(shiny386)   ui <- page_386(   textAreaInput(\"caption\", \"Caption\", \"Data Summary\"),   verbatimTextOutput(\"value\")  )   server <- function(input, output, session) {   output$value <- renderText({ input$caption })  }  shinyApp(ui, server)  }"},{"path":"https://rinterface.github.io/shiny386/reference/text_input_386.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Bootstrap 386 text input — text_input_386","title":"Create a Bootstrap 386 text input — text_input_386","text":"Create Bootstrap 386 text input","code":""},{"path":"https://rinterface.github.io/shiny386/reference/text_input_386.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Bootstrap 386 text input — text_input_386","text":"","code":"text_input_386(inputId, label, value = \"\", width = NULL, placeholder = NULL)"},{"path":"https://rinterface.github.io/shiny386/reference/text_input_386.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Bootstrap 386 text input — text_input_386","text":"inputId input slot used access value. label Display label control, NULL label. value Initial value. width width input, e.g. '400px', '100%'; see validateCssUnit(). placeholder character string giving user hint can entered control. Internet Explorer 8 9 support option.","code":""},{"path":"https://rinterface.github.io/shiny386/reference/text_input_386.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Bootstrap 386 text input — text_input_386","text":"","code":"if (interactive()) {  library(shiny)  library(shiny386)   ui <- page_386(   textInput(\"caption\", \"Caption\", \"Data Summary\"),   verbatimTextOutput(\"value\")  )   server <- function(input, output, session) {   output$value <- renderText({ input$caption })  }  shinyApp(ui, server)  }"},{"path":"https://rinterface.github.io/shiny386/reference/toast_386.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Bootstrap 386 toast — toast_386","title":"Create a Bootstrap 386 toast — toast_386","text":"Display user feedback","code":""},{"path":"https://rinterface.github.io/shiny386/reference/toast_386.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Bootstrap 386 toast — toast_386","text":"","code":"toast_386(id, title = NULL, subtitle = NULL, ..., img = NULL)"},{"path":"https://rinterface.github.io/shiny386/reference/toast_386.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Bootstrap 386 toast — toast_386","text":"id Unique toast id. title Toast title. subtitle Toast subtitle. ... Toast content. img Toast image.","code":""},{"path":"https://rinterface.github.io/shiny386/reference/toast_386.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Bootstrap 386 toast — toast_386","text":"toast","code":""},{"path":[]},{"path":"https://rinterface.github.io/shiny386/reference/toggle_input_386.html","id":null,"dir":"Reference","previous_headings":"","what":"Custom Bootstrap 386 switch input — toggle_input_386","title":"Custom Bootstrap 386 switch input — toggle_input_386","text":"Similar shiny checkbox","code":""},{"path":"https://rinterface.github.io/shiny386/reference/toggle_input_386.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Custom Bootstrap 386 switch input — toggle_input_386","text":"","code":"toggle_input_386(inputId, label, value = FALSE, width = NULL)"},{"path":"https://rinterface.github.io/shiny386/reference/toggle_input_386.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Custom Bootstrap 386 switch input — toggle_input_386","text":"inputId input slot used access value. label Display label control, NULL label. value Initial value (TRUE FALSE). width width input, e.g. '400px', '100%'; see validateCssUnit().","code":""},{"path":"https://rinterface.github.io/shiny386/reference/toggle_input_386.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Custom Bootstrap 386 switch input — toggle_input_386","text":"toggle input tag.","code":""},{"path":[]},{"path":"https://rinterface.github.io/shiny386/reference/toggle_input_386.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Custom Bootstrap 386 switch input — toggle_input_386","text":"","code":"if (interactive()) {  library(shiny)  library(shiny386)   ui <- page_386(   toggle_input_386(\"toggle\", \"Toggle me\", TRUE),   verbatimTextOutput(\"val\")  )   server <- function(input, output, session) {    output$val <- renderPrint(input$toggle)  }  shinyApp(ui, server) }"},{"path":"https://rinterface.github.io/shiny386/reference/update_checkbox_group_input_386.html","id":null,"dir":"Reference","previous_headings":"","what":"Change the value of a checkbox group input on the client — update_checkbox_group_input_386","title":"Change the value of a checkbox group input on the client — update_checkbox_group_input_386","text":"Change value checkbox group input client","code":""},{"path":"https://rinterface.github.io/shiny386/reference/update_checkbox_group_input_386.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change the value of a checkbox group input on the client — update_checkbox_group_input_386","text":"","code":"update_checkbox_group_input_386(   session,   inputId,   label = NULL,   choices = NULL,   selected = NULL,   choiceNames = NULL,   choiceValues = NULL )"},{"path":"https://rinterface.github.io/shiny386/reference/update_checkbox_group_input_386.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change the value of a checkbox group input on the client — update_checkbox_group_input_386","text":"session session object passed function given shinyServer. inputId input slot used access value. label Display label control, NULL label. choices List values show checkboxes . elements list named name rather value displayed user. argument provided, choiceNames choiceValues must provided, vice-versa. values strings; types (logicals numbers) coerced strings. selected values initially selected, . choiceNames, choiceValues List names values, respectively, displayed user app correspond choice (reason, choiceNames choiceValues must length). either arguments provided, must provided choices must provided. advantage using named list choices choiceNames allows type UI object passed (tag objects, icons, HTML code, ...), instead just simple text. See Examples.","code":""},{"path":[]},{"path":"https://rinterface.github.io/shiny386/reference/update_checkbox_group_input_386.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Change the value of a checkbox group input on the client — update_checkbox_group_input_386","text":"","code":"if (interactive()) {   ui <- page_386(    p(\"The first radio button group controls the second\"),    checkbox_group_input_386(\"inCheckboxGroup\", \"Input radio buttons\",      c(\"Item A\", \"Item B\", \"Item C\")),    checkbox_group_input_386(\"inCheckboxGroup2\", \"Input radio buttons 2\",      c(\"Item A\", \"Item B\", \"Item C\"))  )   server <- function(input, output, session) {    observe({     x <- input$inCheckboxGroup      # Can use character(0) to remove all choices     if (is.null(x))       x <- character(0)      # Can also set the label and select items     update_checkbox_group_input_386(session, \"inCheckboxGroup2\",                              label = paste(\"Checkboxgroup label\", length(x)),                              choices = x,                              selected = x     )    })  }   shinyApp(ui, server) }"},{"path":"https://rinterface.github.io/shiny386/reference/update_checkbox_input_386.html","id":null,"dir":"Reference","previous_headings":"","what":"Update checkbox_input_386 on the client — update_checkbox_input_386","title":"Update checkbox_input_386 on the client — update_checkbox_input_386","text":"Update checkbox_input_386 client","code":""},{"path":"https://rinterface.github.io/shiny386/reference/update_checkbox_input_386.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update checkbox_input_386 on the client — update_checkbox_input_386","text":"","code":"update_checkbox_input_386(session, inputId, label = NULL, value = NULL)"},{"path":"https://rinterface.github.io/shiny386/reference/update_checkbox_input_386.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update checkbox_input_386 on the client — update_checkbox_input_386","text":"session session object passed function given shinyServer. Default getDefaultReactiveDomain(). inputId id input object. label label set input object. value Initial value (TRUE FALSE).","code":""},{"path":"https://rinterface.github.io/shiny386/reference/update_checkbox_input_386.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update checkbox_input_386 on the client — update_checkbox_input_386","text":"","code":"if (interactive()) {  library(shiny)  library(shiny386)   ui <- page_386(   button_386(\"update\", \"Go!\", class = \"btn-lg\"),   checkbox_input_386(\"check\", \"Checked\", value = TRUE)  )   server <- function(input, output, session) {    observe(print(input$check))    observeEvent(input$update, {      update_checkbox_input_386(        session,        \"toggle\",        value = !input$check      )    })  }   shinyApp(ui, server) }"},{"path":"https://rinterface.github.io/shiny386/reference/update_progress_386.html","id":null,"dir":"Reference","previous_headings":"","what":"Update a progress_386 on the client — update_progress_386","title":"Update a progress_386 on the client — update_progress_386","text":"Update progress_386 client","code":""},{"path":"https://rinterface.github.io/shiny386/reference/update_progress_386.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update a progress_386 on the client — update_progress_386","text":"","code":"update_progress_386(id, value, session = shiny::getDefaultReactiveDomain())"},{"path":"https://rinterface.github.io/shiny386/reference/update_progress_386.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update a progress_386 on the client — update_progress_386","text":"id Progress unique id. value New value. session Shiny session object.","code":""},{"path":"https://rinterface.github.io/shiny386/reference/update_progress_386.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update a progress_386 on the client — update_progress_386","text":"","code":"if (interactive()) {  library(shiny)  library(shiny386)  ui <- page_386(   button_386(\"update\", \"Update\"),   br(),   progress_386(id = \"progress1\", 12)  )   server <- function(input, output, session) {    observeEvent(input$update, {      update_progress_386(        id = \"progress1\",        sample(1:100, 1)      )    })  }  shinyApp(ui, server) }"},{"path":"https://rinterface.github.io/shiny386/reference/update_radio_input_386.html","id":null,"dir":"Reference","previous_headings":"","what":"Change the value of a radio input on the client — update_radio_input_386","title":"Change the value of a radio input on the client — update_radio_input_386","text":"Change value radio input client","code":""},{"path":"https://rinterface.github.io/shiny386/reference/update_radio_input_386.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change the value of a radio input on the client — update_radio_input_386","text":"","code":"update_radio_input_386(   session,   inputId,   label = NULL,   choices = NULL,   selected = NULL,   choiceNames = NULL,   choiceValues = NULL )"},{"path":"https://rinterface.github.io/shiny386/reference/update_radio_input_386.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change the value of a radio input on the client — update_radio_input_386","text":"session session object passed function given shinyServer. inputId input slot used access value. label Display label control, NULL label. choices List values select (elements list named name rather value displayed user). argument provided, choiceNames choiceValues must provided, vice-versa. values strings; types (logicals numbers) coerced strings. selected initially selected value. specified, defaults first item choices. start items selected, use character(0). choiceNames, choiceValues List names values, respectively, displayed user app correspond choice (reason, choiceNames choiceValues must length). either arguments provided, must provided choices must provided. advantage using named list choices choiceNames allows type UI object passed (tag objects, icons, HTML code, ...), instead just simple text. See Examples.","code":""},{"path":[]},{"path":"https://rinterface.github.io/shiny386/reference/update_radio_input_386.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Change the value of a radio input on the client — update_radio_input_386","text":"","code":"if (interactive()) {   ui <- page_386(    p(\"The first radio button group controls the second\"),    radio_input_386(\"inRadioButtons\", \"Input radio buttons\",      c(\"Item A\", \"Item B\", \"Item C\")),    radio_input_386(\"inRadioButtons2\", \"Input radio buttons 2\",      c(\"Item A\", \"Item B\", \"Item C\"))  )   server <- function(input, output, session) {    observe({      x <- input$inRadioButtons      # Can also set the label and select items     update_radio_input_386(session, \"inRadioButtons2\",       label = paste(\"radioButtons label\", x),       choices = x,       selected = x     )   })  }   shinyApp(ui, server) }"},{"path":"https://rinterface.github.io/shiny386/reference/update_select_input_386.html","id":null,"dir":"Reference","previous_headings":"","what":"Update a Bootstrap 386 select input on the client — update_select_input_386","title":"Update a Bootstrap 386 select input on the client — update_select_input_386","text":"Update Bootstrap 386 select input client","code":""},{"path":"https://rinterface.github.io/shiny386/reference/update_select_input_386.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update a Bootstrap 386 select input on the client — update_select_input_386","text":"","code":"update_select_input_386(   session = getDefaultReactiveDomain(),   inputId,   label = NULL,   choices = NULL,   selected = NULL )"},{"path":"https://rinterface.github.io/shiny386/reference/update_select_input_386.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update a Bootstrap 386 select input on the client — update_select_input_386","text":"session session object passed function given shinyServer. Default getDefaultReactiveDomain(). inputId id input object. label label set input object. choices List values select . elements list named, name — rather value — displayed user. also possible group related inputs providing named list whose elements (either named unnamed) lists, vectors, factors. case, outermost names used group labels (leveraging <optgroup> HTML tag) elements respective sublist. See example section small demo feature. selected initially selected value (multiple values multiple = TRUE). specified defaults first value single-select lists values multiple select lists.","code":""},{"path":"https://rinterface.github.io/shiny386/reference/update_select_input_386.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update a Bootstrap 386 select input on the client — update_select_input_386","text":"","code":"if (interactive()) {  library(shiny)  library(shiny386)   ui <- page_386(   p(\"The radio group controls the select input\"),   radio_input_386(\"inCheckboxGroup\", \"Input checkbox\",                      c(\"Item A\", \"Item B\", \"Item C\")),   select_input_386(\"inSelect\", \"Select input\",              c(\"Item A\", \"Item B\", \"Item C\"))  )   server <- function(input, output, session) {    observe({      x <- input$inCheckboxGroup       # Can use character(0) to remove all choices      if (is.null(x))        x <- character(0)       # Can also set the label and select items      update_select_input_386(session, \"inSelect\",                        label = paste(\"Select input label\", length(x)),                        choices = x,                        selected = tail(x, 1)      )    })  }   shinyApp(ui, server) }"},{"path":"https://rinterface.github.io/shiny386/reference/update_tabset_panel_386.html","id":null,"dir":"Reference","previous_headings":"","what":"Update a Bootstrap 386 tabset panel on the client — update_tabset_panel_386","title":"Update a Bootstrap 386 tabset panel on the client — update_tabset_panel_386","text":"Update Bootstrap 386 tabset panel client","code":""},{"path":"https://rinterface.github.io/shiny386/reference/update_tabset_panel_386.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update a Bootstrap 386 tabset panel on the client — update_tabset_panel_386","text":"","code":"update_tabset_panel_386(   session = getDefaultReactiveDomain(),   inputId,   selected = NULL )"},{"path":"https://rinterface.github.io/shiny386/reference/update_tabset_panel_386.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update a Bootstrap 386 tabset panel on the client — update_tabset_panel_386","text":"session session object passed function given shinyServer. Default getDefaultReactiveDomain(). inputId id tabsetPanel, navlistPanel, navbarPage object. selected value (, none supplied, title) tab selected default. NULL, first tab selected.","code":""},{"path":"https://rinterface.github.io/shiny386/reference/update_tabset_panel_386.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update a Bootstrap 386 tabset panel on the client — update_tabset_panel_386","text":"","code":"if (interactive()) {  library(shiny)  library(shiny386)   ui <- page_386(sidebarLayout(  sidebarPanel(    radio_input_386(\"controller\", \"Controller\", choices = c(1, 2, 3))  ),  mainPanel(    tabset_panel_386(id = \"inTabset\",                tab_panel_386(title = \"Panel 1\", value = \"panel1\", \"Panel 1 content\"),                tab_panel_386(title = \"Panel 2\", value = \"panel2\", \"Panel 2 content\"),                tab_panel_386(title = \"Panel 3\", value = \"panel3\", \"Panel 3 content\")    )  )  ))   server <- function(input, output, session) {    observeEvent(input$controller, {      update_tabset_panel_386(session, \"inTabset\",                        selected = paste0(\"panel\", input$controller)      )    })  }   shinyApp(ui, server) }"},{"path":"https://rinterface.github.io/shiny386/reference/update_text_area_input_386.html","id":null,"dir":"Reference","previous_headings":"","what":"Update a Bootstrap 386 text area input on the client — update_text_area_input_386","title":"Update a Bootstrap 386 text area input on the client — update_text_area_input_386","text":"Update Bootstrap 386 text area input client","code":""},{"path":"https://rinterface.github.io/shiny386/reference/update_text_area_input_386.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update a Bootstrap 386 text area input on the client — update_text_area_input_386","text":"","code":"update_text_area_input_386(   session = getDefaultReactiveDomain(),   inputId,   label = NULL,   value = NULL,   placeholder = NULL )"},{"path":"https://rinterface.github.io/shiny386/reference/update_text_area_input_386.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update a Bootstrap 386 text area input on the client — update_text_area_input_386","text":"session session object passed function given shinyServer. Default getDefaultReactiveDomain(). inputId id input object. label label set input object. value Initial value. placeholder character string giving user hint can entered control. Internet Explorer 8 9 support option.","code":""},{"path":"https://rinterface.github.io/shiny386/reference/update_text_input_386.html","id":null,"dir":"Reference","previous_headings":"","what":"Update a Bootstrap 386 text input on the client — update_text_input_386","title":"Update a Bootstrap 386 text input on the client — update_text_input_386","text":"Update Bootstrap 386 text input client","code":""},{"path":"https://rinterface.github.io/shiny386/reference/update_text_input_386.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update a Bootstrap 386 text input on the client — update_text_input_386","text":"","code":"update_text_input_386(   session = getDefaultReactiveDomain(),   inputId,   label = NULL,   value = NULL,   placeholder = NULL )"},{"path":"https://rinterface.github.io/shiny386/reference/update_text_input_386.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update a Bootstrap 386 text input on the client — update_text_input_386","text":"session session object passed function given shinyServer. Default getDefaultReactiveDomain(). inputId id input object. label label set input object. value Initial value. placeholder character string giving user hint can entered control. Internet Explorer 8 9 support option.","code":""},{"path":"https://rinterface.github.io/shiny386/reference/update_toggle_input_386.html","id":null,"dir":"Reference","previous_headings":"","what":"Update toggle_input_386 on the client — update_toggle_input_386","title":"Update toggle_input_386 on the client — update_toggle_input_386","text":"Update toggle_input_386 client","code":""},{"path":"https://rinterface.github.io/shiny386/reference/update_toggle_input_386.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update toggle_input_386 on the client — update_toggle_input_386","text":"","code":"update_toggle_input_386(session, inputId, label = NULL, value = NULL)"},{"path":"https://rinterface.github.io/shiny386/reference/update_toggle_input_386.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update toggle_input_386 on the client — update_toggle_input_386","text":"session session object passed function given shinyServer. Default getDefaultReactiveDomain(). inputId id input object. label label set input object. value Initial value (TRUE FALSE).","code":""},{"path":"https://rinterface.github.io/shiny386/reference/update_toggle_input_386.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update toggle_input_386 on the client — update_toggle_input_386","text":"","code":"if (interactive()) {  library(shiny)  library(shiny386)   ui <- page_386(   button_386(\"update\", \"Go!\", class = \"btn-lg\"),   toggle_input_386(\"toggle\", \"Switch\", value = TRUE)  )   server <- function(input, output, session) {    observe(print(input$toggle))    observeEvent(input$update, {      update_toggle_input_386(        session,        \"toggle\",        value = !input$toggle      )    })  }   shinyApp(ui, server) }"},{"path":"https://rinterface.github.io/shiny386/reference/use_bs4_deps.html","id":null,"dir":"Reference","previous_headings":"","what":"Create shiny386 dependencies — use_bs4_deps","title":"Create shiny386 dependencies — use_bs4_deps","text":"Add necessary dependencies shiny386 renders well","code":""},{"path":"https://rinterface.github.io/shiny386/reference/use_bs4_deps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create shiny386 dependencies — use_bs4_deps","text":"","code":"use_bs4_deps(tag)"},{"path":"https://rinterface.github.io/shiny386/reference/use_bs4_deps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create shiny386 dependencies — use_bs4_deps","text":"tag Tag add dependencies. usually target body.","code":""},{"path":[]},{"path":"https://rinterface.github.io/shiny386/reference/validate_progress_value.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate a progress_386 value — validate_progress_value","title":"Validate a progress_386 value — validate_progress_value","text":"Validate progress_386 value","code":""},{"path":"https://rinterface.github.io/shiny386/reference/validate_progress_value.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate a progress_386 value — validate_progress_value","text":"","code":"validate_progress_value(value)"},{"path":"https://rinterface.github.io/shiny386/reference/validate_progress_value.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate a progress_386 value — validate_progress_value","text":"value Value validate.","code":""},{"path":"https://rinterface.github.io/shiny386/reference/validate_progress_value.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate a progress_386 value — validate_progress_value","text":"error raised value met expectations.","code":""},{"path":"https://rinterface.github.io/shiny386/reference/validate_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Validation function — validate_status","title":"Validation function — validate_status","text":"Validate status Bootstrap 386 element.","code":""},{"path":"https://rinterface.github.io/shiny386/reference/validate_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validation function — validate_status","text":"","code":"validate_status(status)"},{"path":"https://rinterface.github.io/shiny386/reference/validate_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validation function — validate_status","text":"status Color validate.","code":""},{"path":"https://rinterface.github.io/shiny386/reference/validate_status.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validation function — validate_status","text":"TRUE test pass.","code":""},{"path":"https://rinterface.github.io/shiny386/reference/validate_status.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validation function — validate_status","text":"","code":"if (FALSE) { # \\dontrun{  validate_status(\"danger\")  validate_status(\"maroon\") } # }"},{"path":[]},{"path":"https://rinterface.github.io/shiny386/news/index.html","id":"features-0-0-1-9000","dir":"Changelog","previous_headings":"","what":"Features","title":"shiny386 0.0.1.9000","text":"Added shinylive demo pkgdown website.","code":""},{"path":"https://rinterface.github.io/shiny386/news/index.html","id":"bug-fixes-0-0-1-9000","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"shiny386 0.0.1.9000","text":"Fix default value checkbox_input_386().","code":""},{"path":"https://rinterface.github.io/shiny386/news/index.html","id":"shiny386-0009000","dir":"Changelog","previous_headings":"","what":"shiny386 0.0.0.9000","title":"shiny386 0.0.0.9000","text":"Added NEWS.md file track changes package.","code":""}]
